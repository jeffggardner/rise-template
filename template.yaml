apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: rise-rest-service-template
  title: Rise Rest Service
  description: Create a simple microservice for Rise
  tags:
    - recommended
    - typescript
    - rest
    - rise
spec:
  owner: service@example.com
  type: service

  parameters:
    - title: Provide some simple information
      required:
        - service_id
        - service_name
        - owner
      properties:
        service_id:
          title: Service Id
          type: string
          description: The name of the service, e.g. 'cancel-stop'
        java_package_name:
          title: Service Name
          type: string
          description: Must be the camel case verion of Service Id, e.g. 'CancelStop'
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutRender:
          - .github/workflows/*
        values:
          service_id: ${{ parameters.service_id }}
          service_name: ${{ parameters.service_name }}
          owner: ${{ parameters.owner }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ["github.com"]
        description: This is ${{ parameters.component_id }}
        repoUrl: ${{ parameters.repoUrl }}

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}